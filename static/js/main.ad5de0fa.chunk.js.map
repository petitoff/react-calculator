{"version":3,"sources":["components/Calculator/Styled/index.js","components/Calculator/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","period","Calculator","useState","previous","setPrevious","current","setCurrent","setOperation","appendValue","el","value","target","getAttribute","includes","chooseOperation","compute","result","previousNumber","parseFloat","currentNumber","onClick","slice","data","undefined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad5de0fa.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n    align-content: center;\r\n    width: 400px;\r\n    margin: 40px auto;\r\n    grid-template-columns: repeat(4, 100px);\r\n    grid-template-rows: minmax(120px, auto) repeat(5, 100px);\r\n    box-shadow: 2px 2px 10px #333;\r\n    border-radius: 10px;\r\n`\r\n\r\nexport const Screen = styled.div`\r\n    grid-column: 1 / -1;\r\n    background-color: rgba(60, 64, 67, 0.75);\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    word-wrap: break-word;\r\n    word-breakL break-all;\r\n    text-align: right;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n`\r\n\r\nexport const Previous = styled.div`\r\n    color: rgba(255, 255, 255, 0.75);\r\n    font-size: 1.5rem;\r\n` \r\nexport const Current = styled.div`\r\n    color: white;\r\n    font-size: 2.5rem;\r\n` \r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    border: 1px outset white;\r\n    outline: none;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.9);\r\n    }\r\n\r\n    ${ function({ gridSpan }){\r\n        if(gridSpan){\r\n            return `grid-column: span ${gridSpan};`\r\n        }\r\n    }}\r\n\r\n    ${({operation}) => operation && `background-color: gray;`}\r\n    ${({control}) => control && `background-color: skyblue;`}\r\n    ${({equals}) => equals && `border-bottom-right-radius: 10px; background-color: gray;`}\r\n    ${({period}) => period && `border-bottom-left-radius: 10px; background-color: skyblue;`}\r\n`","import { Button, Container, Current, Previous, Screen } from \"./Styled\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function Calculator(){\r\n    const [previous, setPrevious] = useState('')\r\n    const [current, setCurrent] = useState('')\r\n    const [operation, setOperation] = useState('')\r\n\r\n    const appendValue = (el) => {\r\n        const value = el.target.getAttribute('data')\r\n        \r\n        if(value === \".\" && current.includes('.')) return\r\n        setCurrent(current + value)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setCurrent(current.slice(0, -1))\r\n    }\r\n\r\n    const handleAllClear = () =>{\r\n        setCurrent('')\r\n        setPrevious('')\r\n        setOperation('')\r\n    }\r\n\r\n    const chooseOperation = (el) => {\r\n        if(current === '') return\r\n\r\n        if(previous !== ''){\r\n            let value = compute();\r\n            setPrevious(value)\r\n        }\r\n        else{\r\n            setPrevious(current)\r\n        }\r\n        setCurrent('')\r\n        setOperation(el.target.getAttribute('data'))\r\n    }\r\n\r\n    const equals = () => {\r\n        let value = compute();\r\n        if(value === undefined || value === null) return\r\n\r\n        setCurrent(value)\r\n        setPrevious('')\r\n        setOperation('')\r\n    }\r\n\r\n    const compute = () => {\r\n        let result\r\n        let previousNumber = parseFloat(previous)\r\n        let currentNumber = parseFloat(current)\r\n\r\n        // if(isNaN(previousNumber) || NaN(currentNumber)) return\r\n\r\n        switch(operation){\r\n            case '÷':\r\n                result = previousNumber / currentNumber;\r\n                break;\r\n            case '×':\r\n                result = previousNumber * currentNumber;\r\n                break;\r\n            case '+':\r\n                result = previousNumber + currentNumber;\r\n                break;\r\n            case '-':\r\n                result = previousNumber - currentNumber;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return result\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Screen>\r\n                <Previous>{previous} {operation}</Previous>\r\n                <Current>{current}</Current>\r\n            </Screen>\r\n            <Button gridSpan={2} control onClick={handleAllClear}>AC</Button>\r\n            <Button control onClick={handleDelete}>DEL</Button>\r\n            <Button data={\"÷\"} onClick={chooseOperation} operation>÷</Button>\r\n            <Button data={\"7\"} onClick={appendValue}>7</Button>\r\n            <Button data={\"8\"} onClick={appendValue}>8</Button>\r\n            <Button data={\"9\"} onClick={appendValue}>9</Button>\r\n            <Button data={\"×\"} onClick={chooseOperation} operation>×</Button>\r\n            <Button data={\"4\"} onClick={appendValue}>4</Button>\r\n            <Button data={\"5\"} onClick={appendValue}>5</Button>\r\n            <Button data={\"6\"} onClick={appendValue}>6</Button>\r\n            <Button data={\"+\"} onClick={chooseOperation} operation>+</Button>\r\n            <Button data={\"1\"} onClick={appendValue}>1</Button>\r\n            <Button data={\"2\"} onClick={appendValue}>2</Button>\r\n            <Button data={\"3\"} onClick={appendValue}>3</Button>\r\n            <Button data={\"-\"} onClick={chooseOperation} operation>-</Button>\r\n            <Button period  data={\".\"} onClick={appendValue}>.</Button>\r\n            <Button data={\"0\"} onClick={appendValue}>0</Button>\r\n            <Button onClick={equals} operation gridSpan={2} equals>=</Button>\r\n        </Container>\r\n    )\r\n}","import Calculator from './components/Calculator';\r\n\r\nfunction App() {\r\n  return (\r\n    <Calculator />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}